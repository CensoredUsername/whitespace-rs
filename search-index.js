var searchIndex = {};
searchIndex["whitespacers"] = {"doc":"","items":[[3,"Interpreter","whitespacers","A whitespace interpreter. This struct provides various strategies for interpreting a whitespace program.",null,null],[3,"Program","","This struct contains the internal representation of a whitespace program.",null,null],[3,"Options","","These are bitflag options to alter the behaviour of the interpreter.",null,null],[3,"WsError","","The common error type returned from all whitespacers execution functions.",null,null],[12,"kind","","The kind of error that occurred.",0,null],[3,"WsParseError","","The error type returned by whitespacers parsing and assembling functions.",null,null],[12,"line","","The line at which the error occurred, starting from 1.",1,null],[12,"column","","The column at which the error occurred, starting from 1.",1,null],[12,"index","","The character index at which the error occurred, starting from 0.",1,null],[4,"WsErrorKind","","Simple information on what kind of error occurred.",null,null],[13,"StackError","","The stack was not of the correct size to execute an instruction.",2,null],[13,"KeyError","","A missing key was requested from the heap.",2,null],[13,"InvalidIndex","","The program tried to execute an instruction that doesn&#39;t exist (generally caused by control flow hitting the end of the program).",2,null],[13,"CallStackError","","The program tried to return but there was no location to return to on the callstack.",2,null],[13,"DivisionError","","Division or Modulo by zero.",2,null],[13,"IOError","","Something went wrong while trying to read from input or write to output.",2,null],[13,"ParseError","","The program tried to read a number but no number was given.",2,null],[13,"Overflow","","An overflow occurred during an arithmetric operation. This will normally not be returned unless fallback is disabled.",2,null],[13,"InumOverflow","","An overflow occurred when a number input was requested. This is a bit of a special case, as the state cannot\nbe rewound to before the number was parsed. Therefore, the key where the number will be read to, and the \noversized integer that was parsed are returned in the error, and the location at which the error occurred\nis set to be the operation after the failed inum operation. Again, this will not be returned unless fallback is disabled.",2,null],[5,"debug_compile","","Returns a buffer containing the output of the compilation process of the\nspecified program. This is mainly useful for debugging and optimizing the\nperformance of the JIT compiler.",null,{"inputs":[{"name":"program"},{"name":"options"}],"output":{"name":"vec"}}],[11,"new","","Construct a new whitespace interpreter from a program, input stream and output stream with the specified options.",3,{"inputs":[{"name":"program"},{"name":"options"},{"name":"bufread"},{"name":"write"}],"output":{"name":"interpreter"}}],[11,"count_with_simple_state","","Similar to Interpreter::interpret_with_simple_state but does not have bigint fallback\nand returns the amount of executed instructions on success.",3,null],[11,"interpret_with_simple_state","","The reference interpreter implementation. It uses simple data structures internally, falling back to\nbignum-based simple datastructures if values become too large.",3,null],[11,"interpret_with_fast_state","","Interprets the program with optimized data structures, falling back to\nbignum-based simple datastructures if values become too large. ",3,null],[11,"interpret_with_bigint_state","","Interpret the program using only bignum-based simple datastructures. This is slow.",3,null],[11,"jit_aot","","Use a jit compiler that compiles the entire program in advance to execute\nthe program. It is backed by an optimized datastructure, and will fall back\nto interpretation in unsafe situations. When values become too large it will\nfall back to bignum-based interpretation.",3,null],[11,"jit_sync","","Use a jit compiler that compiles code synchronously while executing\nthe program. It is backed by an optimized datastructure, and will fall back\nto interpretation in unsafe situations. When values become too large it will\nfall back to bignum-based interpretation.",3,null],[11,"jit_threaded","","Use a jit compiler that compiles the program in a separate thread while executing\nthe program. It is backed by an optimized datastructure, and will fall back\nto interpretation in unsafe situations. When values become too large it will\nfall back to bignum-based interpretation.",3,null],[11,"strip","","Remove source location information from the program.",4,null],[11,"parse","","Parse a program written in whitespace to a format suitable\nfor execution.",4,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"dump","","Serialize the internal representation back into a whitespace program.",4,null],[11,"disassemble","","Disassemble a program into a human-readable whitespace assembly.",4,null],[11,"assemble","","Parse a program written in whitespace assembly into a program.",4,{"inputs":[{"name":"string"}],"output":{"name":"result"}}],[17,"IGNORE_OVERFLOW","","Use wrapping arithmetric instead of detecting overflow and falling back",null,null],[17,"UNCHECKED_HEAP","","When an unknown key used to get an item from the heap, return 0 instead of causing an error.",null,null],[17,"NO_FALLBACK","","Don&#39;t fall back to biginteger interpretation on overflow, instead return an overflow error.",null,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"cmp","","",5,null],[11,"hash","","",5,null],[11,"fmt","","",5,null],[11,"empty","","Returns an empty set of flags.",5,{"inputs":[],"output":{"name":"options"}}],[11,"all","","Returns the set containing all flags.",5,{"inputs":[],"output":{"name":"options"}}],[11,"bits","","Returns the raw value of the flags currently stored.",5,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",5,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",5,{"inputs":[{"name":"u8"}],"output":{"name":"options"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",5,null],[11,"is_all","","Returns `true` if all flags are currently set.",5,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",5,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",5,null],[11,"insert","","Inserts the specified flags in-place.",5,null],[11,"remove","","Removes the specified flags in-place.",5,null],[11,"toggle","","Toggles the specified flags in-place.",5,null],[11,"bitor","","Returns the union of the two sets of flags.",5,null],[11,"bitor_assign","","Adds the set of flags.",5,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",5,null],[11,"bitxor_assign","","Toggles the set of flags.",5,null],[11,"bitand","","Returns the intersection between the two sets of flags.",5,null],[11,"bitand_assign","","Disables all flags disabled in the set.",5,null],[11,"sub","","Returns the set difference of the two sets of flags.",5,null],[11,"sub_assign","","Disables all flags enabled in the set.",5,null],[11,"not","","Returns the complement of this set of flags.",5,null],[11,"extend","","",5,null],[11,"from_iter","","",5,{"inputs":[{"name":"t"}],"output":{"name":"options"}}],[11,"fmt","","",0,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"format_with_program","","Provide a nice error message using information stored in the program structure",0,null],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"fmt","","",1,null],[11,"description","","",1,null],[11,"fmt","","",1,null]],"paths":[[3,"WsError"],[3,"WsParseError"],[4,"WsErrorKind"],[3,"Interpreter"],[3,"Program"],[3,"Options"]]};
searchIndex["wsc"] = {"doc":"","items":[],"paths":[]};
initSearch(searchIndex);
