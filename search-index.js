var searchIndex = JSON.parse('{\
"whitespacers":{"doc":"","i":[[3,"Interpreter","whitespacers","A whitespace interpreter. This struct provides various…",null,null],[3,"Program","","This struct contains the internal representation of a…",null,null],[3,"Options","","These are bitflag options to alter the behaviour of the…",null,null],[3,"WsError","","The common error type returned from all whitespacers…",null,null],[12,"kind","","The kind of error that occurred.",0,null],[4,"WsErrorKind","","Simple information on what kind of error occurred.",null,null],[13,"ParseError","","Compile-time parse error",1,null],[13,"StackError","","The stack was not of the correct size to execute an…",1,null],[13,"KeyError","","A missing key was requested from the heap.",1,null],[13,"InvalidIndex","","The program tried to execute an instruction that doesn\'t…",1,null],[13,"CallStackError","","The program tried to return but there was no location to…",1,null],[13,"DivisionError","","Division or Modulo by zero.",1,null],[13,"IOError","","Something went wrong while trying to read from input or…",1,null],[13,"RuntimeParseError","","The program tried to read a number but no number was given.",1,null],[13,"Overflow","","An overflow occurred during an arithmetric operation. This…",1,null],[13,"InumOverflow","","An overflow occurred when a number input was requested.…",1,null],[5,"debug_compile","","Returns a buffer containing the output of the compilation…",null,[[["options",3],["program",3]],["vec",3]]],[11,"new","","Construct a new whitespace interpreter from a program,…",2,[[["program",3],["options",3],["write",8],["bufread",8]],["interpreter",3]]],[11,"count_with_simple_state","","Similar to Interpreter::interpret_with_simple_state but…",2,[[],[["wserror",3],["result",4]]]],[11,"interpret_with_simple_state","","The reference interpreter implementation. It uses simple…",2,[[],[["result",4],["wserror",3]]]],[11,"interpret_with_fast_state","","Interprets the program with optimized data structures,…",2,[[],[["result",4],["wserror",3]]]],[11,"interpret_with_bigint_state","","Interpret the program using only bignum-based simple…",2,[[],[["result",4],["wserror",3]]]],[11,"jit_aot","","Use a jit compiler that compiles the entire program in…",2,[[],[["result",4],["wserror",3]]]],[11,"jit_sync","","Use a jit compiler that compiles code synchronously while…",2,[[],[["result",4],["wserror",3]]]],[11,"jit_threaded","","Use a jit compiler that compiles the program in a separate…",2,[[],[["result",4],["wserror",3]]]],[11,"strip","","Remove source location information from the program.",3,[[]]],[11,"minify","","Rewrites labels to ensure the resulting program is as…",3,[[]]],[11,"parse","","Parse a program written in whitespace to a format suitable…",3,[[["vec",3]],[["result",4],["wserror",3],["program",3]]]],[11,"dump","","Serialize the internal representation back into a…",3,[[],["vec",3]]],[11,"disassemble","","Disassemble a program into a human-readable whitespace…",3,[[],["string",3]]],[11,"assemble","","Parse a program written in whitespace assembly into a…",3,[[["string",3]],[["result",4],["wserror",3],["program",3]]]],[18,"IGNORE_OVERFLOW","","Use wrapping arithmetric instead of detecting overflow and…",4,null],[18,"UNCHECKED_HEAP","","When an unknown key used to get an item from the heap,…",4,null],[18,"NO_FALLBACK","","Don\'t fall back to biginteger interpretation on overflow,…",4,null],[18,"NO_IMPLICIT_EXIT","","Raise an error on hitting the end of the program instead…",4,null],[11,"empty","","Returns an empty set of flags",4,[[],["options",3]]],[11,"all","","Returns the set containing all flags.",4,[[],["options",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",4,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",4,[[],[["option",4],["options",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",4,[[],["options",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",4,[[],["options",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",4,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",4,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",4,[[["options",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",4,[[["options",3]]]],[11,"insert","","Inserts the specified flags in-place.",4,[[["options",3]]]],[11,"remove","","Removes the specified flags in-place.",4,[[["options",3]]]],[11,"toggle","","Toggles the specified flags in-place.",4,[[["options",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",4,[[["options",3]]]],[11,"format_with_program","","Provide a nice error message using information stored in…",0,[[["program",3]],["string",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]],["wserror",3]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"clone","","",3,[[],["program",3]]],[11,"clone","","",4,[[],["options",3]]],[11,"clone","","",1,[[],["wserrorkind",4]]],[11,"cmp","","",4,[[["options",3]],["ordering",4]]],[11,"eq","","",4,[[["options",3]]]],[11,"ne","","",4,[[["options",3]]]],[11,"partial_cmp","","",4,[[["options",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["options",3]]]],[11,"le","","",4,[[["options",3]]]],[11,"gt","","",4,[[["options",3]]]],[11,"ge","","",4,[[["options",3]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","","Returns the set difference of the two sets of flags.",4,[[["options",3]],["options",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",4,[[["options",3]]]],[11,"not","","Returns the complement of this set of flags.",4,[[],["options",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",4,[[["options",3]],["options",3]]],[11,"bitor","","Returns the union of the two sets of flags.",4,[[["options",3]],["options",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",4,[[["options",3]],["options",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",4,[[["options",3]]]],[11,"bitor_assign","","Adds the set of flags.",4,[[["options",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",4,[[["options",3]]]],[11,"hash","","",4,[[]]],[11,"from_iter","","",4,[[["intoiterator",8]],["options",3]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]],[11,"cause","","",0,[[],[["option",4],["error",8]]]]],"p":[[3,"WsError"],[4,"WsErrorKind"],[3,"Interpreter"],[3,"Program"],[3,"Options"]]},\
"wsc":{"doc":"","i":[[3,"Args","wsc","",null,null],[12,"program","","",0,null],[12,"options","","",0,null],[12,"input","","",0,null],[12,"output","","",0,null],[12,"format","","",0,null],[12,"action","","",0,null],[12,"perf","","",0,null],[12,"minify","","",0,null],[4,"FileFormat","","",null,null],[13,"Whitespace","","",1,null],[13,"Assembly","","",1,null],[4,"Action","","",null,null],[13,"Translate","","",2,null],[13,"Execute","","",2,null],[13,"Dump","","",2,null],[4,"Strategy","","",null,null],[13,"SimpleState","","",3,null],[13,"BigState","","",3,null],[13,"FastState","","",3,null],[13,"AoT","","",3,null],[13,"Sync","","",3,null],[13,"Async","","",3,null],[13,"Count","","",3,null],[5,"main","","",null,[[]]],[5,"console_main","","",null,[[],[["box",3],["result",4]]]],[5,"parse_args","","",null,[[],[["args",3],["string",3],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","","",0,[[],["args",3]]],[11,"clone","","",1,[[],["fileformat",4]]],[11,"clone","","",2,[[],["action",4]]],[11,"clone","","",3,[[],["strategy",4]]],[11,"eq","","",1,[[["fileformat",4]]]],[11,"eq","","",2,[[["action",4]]]],[11,"ne","","",2,[[["action",4]]]],[11,"eq","","",3,[[["strategy",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]]],"p":[[3,"Args"],[4,"FileFormat"],[4,"Action"],[4,"Strategy"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);